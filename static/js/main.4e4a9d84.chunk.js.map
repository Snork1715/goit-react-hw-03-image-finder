{"version":3,"sources":["components/Skeleton/Skeleton.js","components/Searchbar/Searchbar.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","services/FetchImage.js","App.js","index.js"],"names":["Skeleton","className","type","color","height","width","timeout","Component","Searchbar","state","imagesType","handleClick","event","setState","currentTarget","value","handleSubmit","preventDefault","trim","props","onSubmit","this","autoComplete","autoFocus","placeholder","onChange","modalRoot","document","getElementById","Modal","handleEscClose","code","onClose","handleOverlayClick","target","window","addEventListener","removeEventListener","bigImage","createPortal","onClick","src","alt","ImageGalleryItem","showModal","toggleModal","prevState","webformatURL","ImageGallery","images","map","image","largeImageURL","id","Button","api","fetchImage","page","baseURL","fetch","then","Response","ok","json","Promise","reject","Error","App","loading","selectedImage","error","getImageType","imType","handleLoadMore","prevProps","setTimeout","FetchImages","hits","catch","finally","message","length","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4e4a9d84.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"./Skeleton.css\";\r\n\r\nclass Skeleton extends Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n        className=\"Skeleton\"\r\n        type=\"Circles\"\r\n        color=\"#006eff\"\r\n        height={40}\r\n        width={40}\r\n        timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Skeleton;\r\n","import React, { Component } from \"react\";\r\nimport \"./Searchbar.css\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    imagesType: \"\",\r\n  };\r\n\r\n  handleClick = (event) => {\r\n    this.setState({ imagesType: event.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.imagesType.trim() === \"\") {\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state.imagesType);\r\n    this.setState({ imagesType: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            value={this.state.imagesType}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleClick}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport \"./Modal.css\";\r\n\r\nconst modalRoot = document.getElementById(\"modal-root\");\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleEscClose);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleEscClose);\r\n  }\r\n\r\n  handleEscClose = (event) => {\r\n    if (event.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleOverlayClick = (event) => {\r\n    if (event.target === event.currentTarget) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { bigImage } = this.props;\r\n\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleOverlayClick}>\r\n        <div className=\"Modal\">\r\n          <img src={bigImage} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport \"./ImageGalleryItem.css\";\r\nimport Modal from \"../Modal\";\r\n\r\nclass ImageGalleryItem extends Component {\r\n  state = { showModal: false };\r\n\r\n  toggleModal = () => {\r\n    this.setState((prevState) => ({\r\n      showModal: !prevState.showModal,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { webformatURL, bigImage } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <li className=\"ImageGalleryItem\" onClick={this.toggleModal}>\r\n          <img className=\"ImageGalleryItem-image\" src={webformatURL} alt=\"\" />\r\n        </li>\r\n        {this.state.showModal && (\r\n          <Modal onClose={this.toggleModal} bigImage={bigImage} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import React, { Component } from \"react\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem\";\r\nimport \"./ImageGallery.css\";\r\n\r\nclass ImageGallery extends Component {\r\n  render() {\r\n    const { images } = this.props;\r\n    return (\r\n      <ul className=\"ImageGallery\">\r\n        {images.map((image) => (\r\n          <ImageGalleryItem\r\n            key={image.id}\r\n            webformatURL={image.webformatURL}\r\n            bigImage={image.largeImageURL}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGallery;\r\n","import \"./Button.css\";\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button type=\"button\" onClick={onClick} className=\"Button\">\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","const APIkey = \"24369535-8c0b0d7fa83b493b4b387e45e\";\r\n\r\nfunction fetchImage(type, page) {\r\n  const baseURL = `https://pixabay.com/api/?q=${type}&page=${page}&key=${APIkey}&image_type=photo&orientation=horizontal&per_page=12`;\r\n  return fetch(baseURL).then((Response) => {\r\n    if (Response.ok) {\r\n      return Response.json();\r\n    }\r\n    return Promise.reject(\r\n      new Error(`Выбран некорректный тип фотографий ${type}`)\r\n    );\r\n  });\r\n}\r\n\r\nconst api = { fetchImage };\r\n\r\nexport default api;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Skeleton from \"./components/Skeleton\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Button from \"./components/Button\";\nimport FetchImages from \"./services/FetchImage\";\n\nclass App extends Component {\n  state = {\n    images: [],\n    loading: false,\n    selectedImage: null,\n    imagesType: \"\",\n    error: null,\n    page: 1,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.imagesType !== this.state.imagesType) {\n      this.setState({ loading: true, images: [] });\n\n      setTimeout(() => {\n        FetchImages.fetchImage(this.state.imagesType, this.state.page)\n          .then(({ hits }) => {\n            this.setState({ images: hits });\n          })\n          .catch((error) => this.setState({ error }))\n          .finally(() => {\n            this.setState({ loading: false });\n          });\n      }, 1000);\n    }\n\n    if (prevState.page !== this.state.page && this.state.page !== 1) {\n      this.setState({ loading: true });\n      setTimeout(() => {\n        FetchImages.fetchImage(this.state.imagesType, this.state.page)\n          .then(({ hits }) =>\n            this.setState({\n              images: [...prevState.images, ...hits],\n            })\n          )\n          .finally(() => {\n            this.setState({ loading: false });\n          });\n      }, 1500);\n    }\n  }\n\n  getImageType = (imType) => {\n    this.setState({ imagesType: imType, page: 1 });\n  };\n\n  handleLoadMore = () => {\n    this.setState((prevState) => ({ page: prevState.page + 1 }));\n  };\n\n  render() {\n    const { error, images, loading } = this.state;\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.getImageType} />\n        {error && <div>{error.message}</div>}\n        {loading && <Skeleton />}\n        <ImageGallery images={images} />\n        {images.length !== 0 && !this.state.loading ? (\n          <Button onClick={this.handleLoadMore} />\n        ) : images.length !== 0 && this.state.loading ? (\n          <Skeleton />\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}